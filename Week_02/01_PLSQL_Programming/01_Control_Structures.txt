Scenario 1: The bank wants to apply a discount to loan interest rates for customers above 60 years old.

Question: Write a PL/SQL block that loops through all customers, checks their age, and if they are above 60, apply a 1% discount to their current loan interest rates.

Solution:

      CREATE TABLE customers (
          customer_id   NUMBER PRIMARY KEY,
          name          VARCHAR2(100),
          age           NUMBER,
          interest_rate NUMBER(5, 2)
      );

      drop table customers;

      INSERT ALL
          INTO customers VALUES (1, 'John Doe', 45, 8.50)
          INTO customers VALUES (2, 'Alice Smith', 62, 9.00)
          INTO customers VALUES (3, 'Ravi Kumar', 70, 10.25)
          INTO customers VALUES (4, 'Meena Patel', 59, 7.75)
          INTO customers VALUES (5, 'George Mathew', 65, 9.50)
      SELECT * FROM dual;


      declare
          cursor c1 is
          select * from customers;
          new_rate customers.interest_rate%type;
      begin
          for row_data in c1
          loop
              if row_data.age > 60 then
                  new_rate := row_data.interest_rate - (0.01 * row_data.interest_rate);
                  update customers
                  set interest_rate = new_rate
                  where customer_id = row_data.customer_id;
              end if;
          end loop;
      exception
          when others then
              dbms_output.put_line('An exception occur');
      end;

      select * from customers order by customer_id;


Scenario 2: A customer can be promoted to VIP status based on their balance.

Question: Write a PL/SQL block that iterates through all customers and sets a flag IsVIP to TRUE for those with a balance over $10,000.


Solution:

      CREATE TABLE customers (
          customer_id   NUMBER PRIMARY KEY,
          name          VARCHAR2(100),
          balance       NUMBER(10, 2),
          is_vip        Number(1) default 0
      );

      select * from customers;

      INSERT ALL
          INTO customers (customer_id, name, balance) VALUES (1, 'John Doe', 8500.00)
          INTO customers (customer_id, name, balance) VALUES (2, 'Alice Smith', 15000.00)
          INTO customers (customer_id, name, balance) VALUES (3, 'Ravi Kumar', 9800.00)
          INTO customers (customer_id, name, balance) VALUES (4, 'Meena Patel', 20000.00)
          INTO customers (customer_id, name, balance) VALUES (5, 'George Mathew', 5000.00)
      SELECT * FROM dual;


      declare
          cursor c1 is
          select * from customers;
      begin
          for row_data in c1
          loop
              if (row_data.balance > 10000) and (row_data.is_vip = 0) then
                  update customers
                  set is_vip = 1
                  where customer_id = row_data.customer_id; 
              end if;
          end loop;
      exception
          when others then
              dbms_output.put_line('An exception occur');
      end;



Scenario 3: The bank wants to send reminders to customers whose loans are due within the next 30 days.

Question: Write a PL/SQL block that fetches all loans due in the next 30 days and prints a reminder message for each customer.

Solution:

set serveroutput on;

      CREATE TABLE loans (
          loan_id       NUMBER PRIMARY KEY,
          customer_name VARCHAR2(100),
          due_date      DATE
      );

      INSERT ALL
          INTO loans VALUES (1, 'John Doe', SYSDATE + 10)      
          INTO loans VALUES (2, 'Alice Smith', SYSDATE + 35)    
          INTO loans VALUES (3, 'Ravi Kumar', SYSDATE + 5)      
          INTO loans VALUES (4, 'Meena Patel', SYSDATE + 29)  
          INTO loans VALUES (5, 'George Mathew', SYSDATE + 60)  
      SELECT * FROM dual;

      select * from loans;

      declare
          cursor c1 is 
          select * from loans;
      begin
          for row_data in c1
          loop    
              if row_data.due_date <= sysdate + 30 then
                  dbms_output.put_line('Dear ' || row_data.customer_name || ', you loan is due in next 30 days');
              end if;
          end loop;
      exception
          when others then
              dbms_output.put_line('An exception occur');
      end;